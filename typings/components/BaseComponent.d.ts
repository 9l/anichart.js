import { Scene } from "../base";
import { Hintable, Hinter, Player, Renderer } from "../interface";
import { FontOptions } from "../options/FontOptions";
import { ShadowOptions } from "../options/shadow-options";
import Pos from "../types/position";
import { EnhancedCanvasRenderingContext2D } from "../utils/enhance-ctx";
import { Component } from "./component";
export declare abstract class BaseComponent implements Component, Hintable {
    alpha: number | ((n: number) => number);
    pos: Pos | ((n: number) => Pos);
    protected cAlpha: number;
    protected cPos: Pos;
    get colorPicker(): import("../interface").ColorPicker;
    set colorPicker(val: import("../interface").ColorPicker);
    get renderer(): Renderer;
    set renderer(val: Renderer);
    get player(): Player;
    set player(val: Player);
    get hinter(): Hinter;
    set hinter(val: Hinter);
    constructor(init?: Partial<BaseComponent>);
    scene: Scene;
    shadow: ShadowOptions;
    font: FontOptions;
    get ctx(): EnhancedCanvasRenderingContext2D;
    set ctx(value: EnhancedCanvasRenderingContext2D);
    update(): void;
    saveCtx(): void;
    preRender(): void;
    abstract render(): void;
    restoreCtx(): void;
    draw(): void;
    protected getValue(obj: any, n: number): any;
}
